<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.ling.vhr.mapper.DepartmentMapper">

    <resultMap id="BaseResultMap" type="com.ling.vhr.modules.system.basic.model.Department">
        <id column="id" property="id"/>
        <result column="department_name" property="departmentName"/>
        <result column="parent_id" property="parentId"/>
        <result column="dept_path" property="deptPath"/>
        <result column="enabled" property="enabled"/>
        <result column="is_parent" property="isParent"/>
    </resultMap>

    <resultMap id="DepartmentWithChildren" type="com.ling.vhr.modules.system.basic.model.Department" extends="BaseResultMap">
        <collection property="children" ofType="com.ling.vhr.modules.system.basic.model.Department"
                    select="com.ling.vhr.mapper.DepartmentMapper.selectAllDepartment"
                    column="id">

        </collection>
    </resultMap>

    <select id="deleteDept" statementType="CALLABLE">
        call deleteDep(#{id,mode = IN ,jdbcType = INTEGER},
                      #{result,mode = OUT, jdbcType = INTEGER}
                      )
    </select>

    <select id="addDept" statementType="CALLABLE">
        call addDep(#{departmentName,mode=IN,jdbcType=VARCHAR},
                    #{parentId,mode=IN,jdbcType=INTEGER},
                    #{enabled,mode=IN,jdbcType=BOOLEAN},
                    #{result,mode=OUT,jdbcType=INTEGER},
                    #{id,mode=OUT,jdbcType=INTEGER}
                    )
    </select>

    <select id="selectAllDepartment" resultMap="DepartmentWithChildren">
        select *
        from department
        where parent_id = #{parentId}
    </select>

    <select id="getAllDeptWithOutChildren" resultType="com.ling.vhr.modules.system.basic.model.Department">
        select *
        from department
    </select>
</mapper>