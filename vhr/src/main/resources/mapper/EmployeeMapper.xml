<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ling.vhr.mapper.EmployeeMapper">

    <resultMap id="BaseResultMap" type="com.ling.vhr.modules.emp.model.Employee">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="gender" property="gender"/>
        <result column="birthday" property="birthday"/>
        <result column="id_card" property="idCard"/>
        <result column="wedlock" property="wedlock"/>
        <result column="nation_id" property="nationId"/>
        <result column="native_place" property="nativePlace"/>
        <result column="politic_id" property="politicId"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="address" property="address"/>
        <result column="department_id" property="departmentId"/>
        <result column="job_level_id" property="jobLevelId"/>
        <result column="pos_id" property="posId"/>
        <result column="engage_form" property="engageForm"/>
        <result column="tiptop_degree" property="tiptopDegree"/>
        <result column="specialty" property="specialty"/>
        <result column="school" property="school"/>
        <result column="begin_date" property="beginDate"/>
        <result column="work_state" property="workState"/>
        <result column="work_id" property="workId"/>
        <result column="contract_term" property="contractTerm"/>
        <result column="conversion_time" property="conversionTime"/>
        <result column="not_work_date" property="notWorkDate"/>
        <result column="begin_contract" property="beginContract"/>
        <result column="end_contract" property="endContract"/>
        <result column="work_age" property="workAge"/>
    </resultMap>

    <resultMap id="AllEmployeeInfo" type="com.ling.vhr.modules.emp.model.Employee" extends="BaseResultMap">
        <association property="department" javaType="com.ling.vhr.modules.system.basic.model.Department">
            <id column="did" property="id"/>
            <result column="department_name" property="departmentName"/>
        </association>
        <association property="nation" javaType="com.ling.vhr.modules.emp.model.Nation">
            <id column="nid" property="id"/>
            <result column="nation_name" property="name"/>
        </association>
        <association property="politicsStatus" javaType="com.ling.vhr.modules.emp.model.PoliticsStatus">
            <id column="politics_status_id" property="id"/>
            <result column="politics_status_name" property="name"/>
        </association>
        <association property="jobLevel" javaType="com.ling.vhr.modules.system.basic.model.JobLevel">
            <id column="jl_id" property="id"/>
            <result column="job_level_name" property="name"/>
        </association>
        <association property="position" javaType="com.ling.vhr.modules.system.basic.model.Position">
            <id column="position_id" property="id"/>
            <result column="position_name" property="name"/>
        </association>
    </resultMap>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null and name != ''">
                name,
            </if>
            <if test="gender != null and gender != ''">
                gender,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="idCard != null and idCard != ''">
                id_card,
            </if>
            <if test="wedlock != null and wedlock != ''">
                wedlock,
            </if>
            <if test="nationId != null">
                nation_id,
            </if>
            <if test="nativePlace != null and nativePlace != ''">
                native_place,
            </if>
            <if test="politicId != null">
                politic_id,
            </if>
            <if test="email != null and email != ''">
                email,
            </if>
            <if test="phone != null and phone != ''">
                phone,
            </if>
            <if test="address != null and address != ''">
                address,
            </if>
            <if test="departmentId != null">
                department_id,
            </if>
            <if test="jobLevelId != null">
                job_level_id,
            </if>
            <if test="posId != null">
                pos_id,
            </if>
            <if test="engageForm != null and engageForm != ''">
                engage_form,
            </if>
            <if test="tiptopDegree != null and tiptopDegree != ''">
                tiptop_degree,
            </if>
            <if test="specialty != null and specialty != ''">
                specialty,
            </if>
            <if test="school != null and school != ''">
                school,
            </if>
            <if test="beginDate != null">
                begin_date,
            </if>
            <if test="workState != null and workState != ''">
                work_state,
            </if>
            <if test="workId != null">
                work_id,
            </if>
            <if test="contractTerm != null">
                contract_term,
            </if>
            <if test="conversionTime != null">
                conversion_time,
            </if>
            <if test="notWorkDate != null">
                not_work_date,
            </if>
            <if test="beginContract != null">
                begin_contract,
            </if>
            <if test="endContract != null">
                end_contract,
            </if>
            <if test="workAge != null">
                work_age,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="name != null and name != ''">
                #{name},
            </if>
            <if test="gender != null and gender != ''">
                #{gender},
            </if>
            <if test="birthday != null">
                #{birthday},
            </if>
            <if test="idCard != null and idCard != ''">
                #{idCard},
            </if>
            <if test="wedlock != null and wedlock != ''">
                #{wedlock},
            </if>
            <if test="nationId != null">
                #{nationId},
            </if>
            <if test="nativePlace != null and nativePlace != ''">
                #{nativePlace},
            </if>
            <if test="politicId != null">
                #{politicId},
            </if>
            <if test="email != null and email != ''">
                #{email},
            </if>
            <if test="phone != null and phone != ''">
                #{phone},
            </if>
            <if test="address != null and address != ''">
                #{address},
            </if>
            <if test="departmentId != null">
                #{departmentId},
            </if>
            <if test="jobLevelId != null">
                #{jobLevelId},
            </if>
            <if test="posId != null">
                #{posId},
            </if>
            <if test="engageForm != null and engageForm != ''">
                #{engageForm},
            </if>
            <if test="tiptopDegree != null and tiptopDegree != ''">
                #{tiptopDegree},
            </if>
            <if test="specialty != null and specialty != ''">
                #{specialty},
            </if>
            <if test="school != null and school != ''">
                #{school},
            </if>
            <if test="beginDate != null">
                #{beginDate},
            </if>
            <if test="workState != null and workState != ''">
                #{workState},
            </if>
            <if test="workId != null">
                #{workId},
            </if>
            <if test="contractTerm != null">
                #{contractTerm},
            </if>
            <if test="conversionTime != null">
                #{conversionTime},
            </if>
            <if test="notWorkDate != null">
                #{notWorkDate},
            </if>
            <if test="beginContract != null">
                #{beginContract},
            </if>
            <if test="endContract != null">
                #{endContract},
            </if>
            <if test="workAge != null">
                #{workAge},
            </if>
        </trim>
    </insert>

    <insert id="batchInsert">
        insert into employee(name,
                             gender,
                             birthday,
                             id_card,
                             wedlock,
                             nation_id,
                             native_place,
                             politic_id,
                             email,
                             phone,
                             address,
                             department_id,
                             job_level_id,
                             pos_id,
                             engage_form,
                             tiptop_degree,
                             specialty,
                             school,
                             begin_date,
                             work_state,
                             work_id,
                             contract_term,
                             conversion_time,
                             not_work_date,
                             begin_contract,
                             end_contract,
                             work_age)
        values
        <foreach collection="list" item="emp" separator=",">
            (#{emp.name},
            #{emp.gender},
            #{emp.birthday},
            #{emp.idCard},
            #{emp.wedlock},
            #{emp.nationId},
            #{emp.nativePlace},
            #{emp.politicId},
            #{emp.email},
            #{emp.phone},
            #{emp.address},
            #{emp.departmentId},
            #{emp.jobLevelId},
            #{emp.posId},
            #{emp.engageForm},
            #{emp.tiptopDegree},
            #{emp.specialty},
            #{emp.school},
            #{emp.beginDate},
            #{emp.workState},
            #{emp.workId},
            #{emp.contractTerm},
            #{emp.conversionTime},
            #{emp.notWorkDate},
            #{emp.beginContract},
            #{emp.endContract},
            #{emp.workAge}
             )
        </foreach>
    </insert>

    <update id="updateByPrimaryKeySelective">
        update employee
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="gender != null and gender != ''">
                gender = #{gender},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="idCard != null and idCard != ''">
                id_card = #{idCard},
            </if>
            <if test="wedlock != null and wedlock != ''">
                wedlock = #{wedlock},
            </if>
            <if test="nationId != null">
                nation_id = #{nationId},
            </if>
            <if test="nativePlace != null and nativePlace != ''">
                native_place = #{nativePlace},
            </if>
            <if test="politicId != null">
                politic_id = #{politicId},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId},
            </if>
            <if test="jobLevelId != null">
                job_level_id = #{jobLevelId},
            </if>
            <if test="posId != null">
                pos_id = #{posId},
            </if>
            <if test="engageForm != null and engageForm != ''">
                engage_form = #{engageForm},
            </if>
            <if test="tiptopDegree != null and tiptopDegree != ''">
                tiptop_degree = #{tiptopDegree},
            </if>
            <if test="specialty != null and specialty != ''">
                specialty = #{specialty},
            </if>
            <if test="school != null and school != ''">
                school = #{school},
            </if>
            <if test="beginDate != null">
                begin_date = #{beginDate},
            </if>
            <if test="workState != null and workState != ''">
                work_state = #{workState},
            </if>
            <if test="workId != null">
                work_id = #{workId},
            </if>
            <if test="contractTerm != null">
                contract_term = #{contractTerm},
            </if>
            <if test="conversionTime != null">
                conversion_time = #{conversionTime},
            </if>
            <if test="notWorkDate != null">
                not_work_date = #{notWorkDate},
            </if>
            <if test="beginContract != null">
                begin_contract = #{beginContract},
            </if>
            <if test="endContract != null">
                end_contract = #{endContract},
            </if>
            <if test="workAge != null">
                work_age = #{workAge},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteByPrimaryKey">
        delete from employee where id = #{employeeId}
    </delete>

    <select id="selectEmployeeByPage" resultMap="AllEmployeeInfo">
        select e.*,
               d.id as did,
               d.department_name,
               n.id as nid,
               n.name as nation_name,
               ps.id as politics_status_id,
               ps.name as politics_status_name,
               jl.id as jl_id,
               jl.name as job_level_name,
               p.id as position_id,
               p.name as position_name

        from employee e,department d,nation n,politics_status ps,job_level jl,`position` p
        where e.department_id = d.id
        and e.nation_id = n.id
        and e.politic_id = ps.id
        and e.job_level_id =jl.id
        and e.pos_id = p.id
        <if test="emp.name != null and emp.name != ''">
            and e.name like concat('%',#{emp.name},'%')
        </if>
        <if test="emp.nationId != null">
            and e.nation_id = #{emp.nationId}
        </if>
        <if test="emp.politicId != null">
            and e.politic_id = #{emp.politicId}
        </if>
        <if test="emp.jobLevelId != null">
            and e.job_level_id = #{emp.jobLevelId}
        </if>
        <if test="emp.posId != null">
            and e.pos_id = #{emp.posId}
        </if>
        <if test="emp.departmentId != null">
            and e.department_id = #{emp.departmentId}
        </if>
        <if test="emp.engageForm != null and emp.engageForm != ''">
            and e.engage_form = #{emp.engageForm}
        </if>
        <if test="emp.beginDateFrom != null and emp.beginDateTo != null">
            and e.begin_date BETWEEN #{emp.beginDateFrom} AND #{emp.beginDateTo}
        </if>

        <if test="offset != null and limit != null">
            limit #{offset},#{limit}
        </if>
    </select>

    <select id="getTotal" resultType="java.lang.Long">
        select count(*)
        from employee e
        <where>
            <if test="name != null and name != ''">
                and e.name like concat('%',#{name},'%')
            </if>
            <if test="nationId != null">
                and e.nation_id = #{nationId}
            </if>
            <if test="politicId != null">
                and e.politic_id = #{politicId}
            </if>
            <if test="jobLevelId != null">
                and e.job_level_id = #{jobLevelId}
            </if>
            <if test="posId != null">
                and e.pos_id = #{posId}
            </if>
            <if test="departmentId != null">
                and e.department_id = #{departmentId}
            </if>
            <if test="engageForm != null and engageForm != ''">
                and e.engage_form = #{engageForm}
            </if>
            <if test="beginDateFrom != null and beginDateTo != null">
                and e.begin_date BETWEEN #{beginDateFrom} AND #{beginDateTo}
            </if>
        </where>
    </select>

    <select id="maxWorkId" resultType="java.lang.Integer">
        select max(work_id) from employee
    </select>

    <select id="selectByPrimaryKey" resultMap="AllEmployeeInfo">
        select e.*,
               d.id as did,
               d.department_name,
               n.id as nid,
               n.name as nation_name,
               ps.id as politics_status_id,
               ps.name as politics_status_name,
               jl.id as jl_id,
               jl.name as job_level_name,
               p.id as position_id,
               p.name as position_name

        from employee e,department d,nation n,politics_status ps,job_level jl,`position` p
        where e.department_id = d.id
          and e.nation_id = n.id
          and e.politic_id = ps.id
          and e.job_level_id =jl.id
          and e.pos_id = p.id
          and e.id = #{id}
    </select>

    <resultMap id="EmployeeWithSalary" type="com.ling.vhr.modules.emp.model.Employee" extends="BaseResultMap">
        <association property="salary" javaType="com.ling.vhr.modules.salary.model.Salary">
            <id column="sid" property="id" />
            <result column="sbasic_salary" property="basicSalary"/>
            <result column="sbonus" property="bonus"/>
            <result column="slunch_salary" property="lunchSalary"/>
            <result column="straffic_salary" property="trafficSalary"/>
            <result column="sall_salary" property="allSalary"/>
            <result column="spension_base" property="pensionBase"/>
            <result column="spension_per" property="pensionPer"/>
            <result column="screate_date" property="createDate" />
            <result column="smedical_base" property="medicalBase"/>
            <result column="smedical_per" property="medicalPer"/>
            <result column="saccumulation_fund_base" property="accumulationFundBase"/>
            <result column="saccumulation_fund_per" property="accumulationFundPer"/>
            <result column="sname" property="name"/>
        </association>
        <association property="department" javaType="com.ling.vhr.modules.system.basic.model.Department">
            <id column="did" property="id"/>
            <result column="department_name" property="departmentName"/>
        </association>
    </resultMap>
    <select id="getEmployeesByPageWithSalary" resultMap="EmployeeWithSalary">
        select e.*,
               d.id as did,
               d.department_name,
               s.id as sid,
               s.basic_salary as sbasic_salary,
               s.bonus as sbonus,
               s.lunch_salary as slunch_salary,
               s.traffic_salary as straffic_salary,
               s.all_salary as sall_salary,
               s.pension_base as spension_base,
               s.pension_per as spension_per,
               s.create_date as screate_date,
               s.medical_base as smedical_base,
               s.medical_per as smedical_per,
               s.accumulation_fund_base as saccumulation_fund_base,
               s.accumulation_fund_per as saccumulation_fund_per,
               s.name as sname
        from employee e
        left join emp_salary es on e.id = es.eid
        left join salary s on es.sid = s.id
        left join department d on e.department_id = d.id
        order by e.id
        <if test="offset != null and limit != null">
            limit #{offset},#{limit}
        </if>
    </select>
</mapper>